# Generated by Django 2.0.2 on 2018-03-03 18:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='city name')),
            ],
        ),
        migrations.CreateModel(
            name='Garden',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('description', models.CharField(max_length=300, null=True)),
                ('name', models.CharField(max_length=100, verbose_name='name of garden')),
                ('slug', models.SlugField(blank=True, null=True, unique=True, verbose_name='slug of garden')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='GardenAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='street address')),
            ],
        ),
        migrations.CreateModel(
            name='GardenAddressType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_type', models.CharField(choices=[('py', 'Physical'), ('ml', 'Mailing')], default='py', max_length=2, verbose_name='type of address')),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('short_name', models.CharField(max_length=2, primary_key=True, serialize=False, verbose_name='state short name')),
                ('name', models.CharField(max_length=50, verbose_name='state full name')),
            ],
        ),
        migrations.CreateModel(
            name='ZipCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=6, verbose_name='zip code')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gardens.City', verbose_name='the related city')),
            ],
        ),
        migrations.AddField(
            model_name='gardenaddress',
            name='address_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gardens.GardenAddressType', verbose_name='the related address type'),
        ),
        migrations.AddField(
            model_name='gardenaddress',
            name='zip_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gardens.ZipCode', verbose_name='the related zip code'),
        ),
        migrations.AddField(
            model_name='garden',
            name='address',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gardens.GardenAddress', verbose_name='the related garden address'),
        ),
        migrations.AddField(
            model_name='garden',
            name='garden_author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='city',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gardens.State', verbose_name='the related state'),
        ),
        migrations.AlterUniqueTogether(
            name='zipcode',
            unique_together={('code', 'city')},
        ),
    ]
